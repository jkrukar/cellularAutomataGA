package com.mxgraph.examples.swing;
import com.mxgraph.swing.mxGraphComponent;
import com.mxgraph.view.mxGraph;
import javax.swing.JFrame;
import java.util.ArrayList;

public class NeutralNetworkGraph extends JFrame{

    public final int NEUTRALNODEDISPLACEMENT = 5;
    public final int LEAFNODEDISPLACEMENT = 3;
    ArrayList<Node> nodes = new ArrayList<Node>(1424);
    mxGraph graph = new mxGraph();
    Object parent = graph.getDefaultParent();

    public NeutralNetworkGraph()
    {
        super("Neutral Network");

        loadVertices();

        buildGraph();

        mxGraphComponent graphComponent = new mxGraphComponent(graph);
        getContentPane().add(graphComponent);
    }

    public static void main(String[] args)
    {
        com.mxgraph.examples.swing.NeutralNetworkGraph frame = new com.mxgraph.examples.swing.NeutralNetworkGraph();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 320);
        frame.setVisible(true);
    }

    public void buildGraph(){

        graph.getModel().beginUpdate();
        try
        {

            Object root = graph.insertVertex(parent, null, "", 800, 800, 15,15, "fillColor=green");
            addChildren(0,0, 0, root);

        }
        finally
        {
            graph.getModel().endUpdate();
        }
    }

    //Returns order of the last child added
    public int addChildren(int parentIndex, int parentDistance, int siblingCount, Object parent){

        System.out.println("addChildren(" + parentIndex + ", " + parentDistance + ")...");

//        if(parentIndex == nodes.size()-1){
//            return 10;
//        }

        int childCounter = 0;
        int parentOffset = 1;
        int nextIndex = parentIndex + parentOffset;
        Node nextChild = nodes.get(nextIndex);
        int nextDistance = nextChild.distance;

        while(nextDistance == parentDistance+1 && nextIndex < nodes.size()){

            nextChild = nodes.get(nextIndex);
            nextDistance = nextChild.distance;

            if(nextDistance != parentDistance+1){
                continue;
            }

            System.out.println("\tnextDistance == parentDistance+1");

            int testX = getDeltaX(siblingCount, true);
            int testY = getDeltaY(siblingCount, true);

//            if(testX <= 1 && testY <= 1){
//                if(testX > 0 && testY > 0){
//                    System.err.println("testX = " + testX);
//                    System.err.println("testY = " + testY);
//                    System.exit(-1);
//                }
//            }

            if(nextChild.leaf){
                System.out.println("\t\t" + nextIndex + ": Child is leaf!");
                Object childVertex = graph.insertVertex(parent, null, "", getDeltaX(siblingCount, true), getDeltaY(siblingCount, true), 3,3, "fillColor=cyan",true);
//                graph.insertEdge(parent, null, "", parent, childVertex, "strokeColor=black");
            }else{
                System.out.println("\t\tChild is neutral node!");
                String style;
                switch(nextChild.distance){
                    case 1:
                        style = "fillColor=blue";
                        break;
                    case 2:
                        style = "fillColor=magenta";
                        break;
                    case 3:
                        style = "fillColor=orange";
                        break;
                    case 4:
                        style = "fillColor=red";
                        break;
                    default:
                        style = "fillColor=black";
                        break;
                }

                Object childVertex = graph.insertVertex(parent, null, "", getDeltaX(siblingCount, false), getDeltaY(siblingCount, false), 10,10, style,true);
                graph.insertEdge(parent, null, "", parent, childVertex, "strokeColor=black");
//                graph.isCellFoldable(childVertex,false);
                nextIndex = addChildren(nextIndex, nextDistance, siblingCount, childVertex);
                System.out.println("returned" + nextIndex);
                continue;
            }
            nextIndex++;
            siblingCount ++;
        }

        return nextIndex;
    }

    int getDeltaX(int index, boolean leaf){

        int deltaX;
        double angle = 25.25*index;
        double cosVal = Math.cos(angle);

        if(leaf){
            deltaX = (int) Math.round(cosVal*LEAFNODEDISPLACEMENT);
        }else{
            deltaX = (int) Math.round(cosVal*NEUTRALNODEDISPLACEMENT);
        }

        return deltaX;
    }

    int getDeltaY(int index, boolean leaf){

        int deltaY;
        double angle = 11.25*index;
        double sinVal = Math.sin(angle);

        if(leaf){
            deltaY = (int) Math.round(sinVal*LEAFNODEDISPLACEMENT);
        }else{
            deltaY = (int) Math.round(sinVal*NEUTRALNODEDISPLACEMENT);
        }

        return deltaY;
    }

    public void loadVertices(){

        nodes.add(new Node(0,0,false));
        nodes.add(new Node(1,1,true));
        nodes.add(new Node(2,1,true));
        nodes.add(new Node(3,1,true));
        nodes.add(new Node(4,1,false));
        nodes.add(new Node(5,2,true));
        nodes.add(new Node(6,2,true));
        nodes.add(new Node(7,2,true));
        nodes.add(new Node(8,2,true));
        nodes.add(new Node(9,2,false));
        nodes.add(new Node(10,3,true));
        nodes.add(new Node(11,3,true));
        nodes.add(new Node(12,3,true));
        nodes.add(new Node(13,3,true));
        nodes.add(new Node(14,3,true));
        nodes.add(new Node(15,3,true));
        nodes.add(new Node(16,3,true));
        nodes.add(new Node(17,3,false));
        nodes.add(new Node(18,4,true));
        nodes.add(new Node(19,4,true));
        nodes.add(new Node(20,4,true));
        nodes.add(new Node(21,4,true));
        nodes.add(new Node(22,4,true));
        nodes.add(new Node(23,4,false));
        nodes.add(new Node(24,5,true));
        nodes.add(new Node(25,5,true));
        nodes.add(new Node(26,5,true));
        nodes.add(new Node(27,5,true));
        nodes.add(new Node(28,5,true));
        nodes.add(new Node(29,5,true));
        nodes.add(new Node(30,5,true));
        nodes.add(new Node(31,5,true));
        nodes.add(new Node(32,5,true));
        nodes.add(new Node(33,5,true));
        nodes.add(new Node(34,5,true));
        nodes.add(new Node(35,5,true));
        nodes.add(new Node(36,5,true));
        nodes.add(new Node(37,5,true));
        nodes.add(new Node(38,5,true));
        nodes.add(new Node(39,5,true));
        nodes.add(new Node(40,5,true));
        nodes.add(new Node(41,5,true));
        nodes.add(new Node(42,5,true));
        nodes.add(new Node(43,5,true));
        nodes.add(new Node(44,5,true));
        nodes.add(new Node(45,5,true));
        nodes.add(new Node(46,5,true));
        nodes.add(new Node(47,5,true));
        nodes.add(new Node(48,5,true));
        nodes.add(new Node(49,5,true));
        nodes.add(new Node(50,5,true));
        nodes.add(new Node(51,5,true));
        nodes.add(new Node(52,4,true));
        nodes.add(new Node(53,4,true));
        nodes.add(new Node(54,4,true));
        nodes.add(new Node(55,4,true));
        nodes.add(new Node(56,4,true));
        nodes.add(new Node(57,4,true));
        nodes.add(new Node(58,4,true));
        nodes.add(new Node(59,4,true));
        nodes.add(new Node(60,4,true));
        nodes.add(new Node(61,4,true));
        nodes.add(new Node(62,4,true));
        nodes.add(new Node(63,4,true));
        nodes.add(new Node(64,4,true));
        nodes.add(new Node(65,4,true));
        nodes.add(new Node(66,4,true));
        nodes.add(new Node(67,4,true));
        nodes.add(new Node(68,4,true));
        nodes.add(new Node(69,4,false));
        nodes.add(new Node(70,5,true));
        nodes.add(new Node(71,5,true));
        nodes.add(new Node(72,5,true));
        nodes.add(new Node(73,5,true));
        nodes.add(new Node(74,5,true));
        nodes.add(new Node(75,5,true));
        nodes.add(new Node(76,5,true));
        nodes.add(new Node(77,5,true));
        nodes.add(new Node(78,5,true));
        nodes.add(new Node(79,5,true));
        nodes.add(new Node(80,5,true));
        nodes.add(new Node(81,5,true));
        nodes.add(new Node(82,5,true));
        nodes.add(new Node(83,5,true));
        nodes.add(new Node(84,5,true));
        nodes.add(new Node(85,5,true));
        nodes.add(new Node(86,5,true));
        nodes.add(new Node(87,5,true));
        nodes.add(new Node(88,5,true));
        nodes.add(new Node(89,5,true));
        nodes.add(new Node(90,5,true));
        nodes.add(new Node(91,5,true));
        nodes.add(new Node(92,5,true));
        nodes.add(new Node(93,5,true));
        nodes.add(new Node(94,5,true));
        nodes.add(new Node(95,5,true));
        nodes.add(new Node(96,5,true));
        nodes.add(new Node(97,4,true));
        nodes.add(new Node(98,4,true));
        nodes.add(new Node(99,4,true));
        nodes.add(new Node(100,4,true));
        nodes.add(new Node(101,4,true));
        nodes.add(new Node(102,3,true));
        nodes.add(new Node(103,3,true));
        nodes.add(new Node(104,3,true));
        nodes.add(new Node(105,3,true));
        nodes.add(new Node(106,3,true));
        nodes.add(new Node(107,3,true));
        nodes.add(new Node(108,3,true));
        nodes.add(new Node(109,3,true));
        nodes.add(new Node(110,3,true));
        nodes.add(new Node(111,3,true));
        nodes.add(new Node(112,3,true));
        nodes.add(new Node(113,3,false));
        nodes.add(new Node(114,4,true));
        nodes.add(new Node(115,4,true));
        nodes.add(new Node(116,4,true));
        nodes.add(new Node(117,4,true));
        nodes.add(new Node(118,4,true));
        nodes.add(new Node(119,4,false));
        nodes.add(new Node(120,5,true));
        nodes.add(new Node(121,5,true));
        nodes.add(new Node(122,5,true));
        nodes.add(new Node(123,5,true));
        nodes.add(new Node(124,5,true));
        nodes.add(new Node(125,5,true));
        nodes.add(new Node(126,5,true));
        nodes.add(new Node(127,5,true));
        nodes.add(new Node(128,5,true));
        nodes.add(new Node(129,5,true));
        nodes.add(new Node(130,5,true));
        nodes.add(new Node(131,5,true));
        nodes.add(new Node(132,5,true));
        nodes.add(new Node(133,5,true));
        nodes.add(new Node(134,5,true));
        nodes.add(new Node(135,5,true));
        nodes.add(new Node(136,5,true));
        nodes.add(new Node(137,5,true));
        nodes.add(new Node(138,5,true));
        nodes.add(new Node(139,5,true));
        nodes.add(new Node(140,5,true));
        nodes.add(new Node(141,5,true));
        nodes.add(new Node(142,5,true));
        nodes.add(new Node(143,5,true));
        nodes.add(new Node(144,5,true));
        nodes.add(new Node(145,5,true));
        nodes.add(new Node(146,5,true));
        nodes.add(new Node(147,4,true));
        nodes.add(new Node(148,4,true));
        nodes.add(new Node(149,4,true));
        nodes.add(new Node(150,4,true));
        nodes.add(new Node(151,4,true));
        nodes.add(new Node(152,4,true));
        nodes.add(new Node(153,4,true));
        nodes.add(new Node(154,4,true));
        nodes.add(new Node(155,4,true));
        nodes.add(new Node(156,4,true));
        nodes.add(new Node(157,4,true));
        nodes.add(new Node(158,4,false));
        nodes.add(new Node(159,5,true));
        nodes.add(new Node(160,5,true));
        nodes.add(new Node(161,5,true));
        nodes.add(new Node(162,5,true));
        nodes.add(new Node(163,5,true));
        nodes.add(new Node(164,5,true));
        nodes.add(new Node(165,5,true));
        nodes.add(new Node(166,5,true));
        nodes.add(new Node(167,5,true));
        nodes.add(new Node(168,5,true));
        nodes.add(new Node(169,5,true));
        nodes.add(new Node(170,5,true));
        nodes.add(new Node(171,5,true));
        nodes.add(new Node(172,5,true));
        nodes.add(new Node(173,5,true));
        nodes.add(new Node(174,5,true));
        nodes.add(new Node(175,5,true));
        nodes.add(new Node(176,5,true));
        nodes.add(new Node(177,5,true));
        nodes.add(new Node(178,5,true));
        nodes.add(new Node(179,5,true));
        nodes.add(new Node(180,5,true));
        nodes.add(new Node(181,5,true));
        nodes.add(new Node(182,5,true));
        nodes.add(new Node(183,5,true));
        nodes.add(new Node(184,5,true));
        nodes.add(new Node(185,5,true));
        nodes.add(new Node(186,4,true));
        nodes.add(new Node(187,4,true));
        nodes.add(new Node(188,4,true));
        nodes.add(new Node(189,4,true));
        nodes.add(new Node(190,4,true));
        nodes.add(new Node(191,4,true));
        nodes.add(new Node(192,4,true));
        nodes.add(new Node(193,4,true));
        nodes.add(new Node(194,4,true));
        nodes.add(new Node(195,4,true));
        nodes.add(new Node(196,3,false));
        nodes.add(new Node(197,4,true));
        nodes.add(new Node(198,4,true));
        nodes.add(new Node(199,4,true));
        nodes.add(new Node(200,4,true));
        nodes.add(new Node(201,4,true));
        nodes.add(new Node(202,4,true));
        nodes.add(new Node(203,4,true));
        nodes.add(new Node(204,4,false));
        nodes.add(new Node(205,5,true));
        nodes.add(new Node(206,5,true));
        nodes.add(new Node(207,5,true));
        nodes.add(new Node(208,5,true));
        nodes.add(new Node(209,5,true));
        nodes.add(new Node(210,5,true));
        nodes.add(new Node(211,5,true));
        nodes.add(new Node(212,5,true));
        nodes.add(new Node(213,5,true));
        nodes.add(new Node(214,5,true));
        nodes.add(new Node(215,5,true));
        nodes.add(new Node(216,5,true));
        nodes.add(new Node(217,5,true));
        nodes.add(new Node(218,5,true));
        nodes.add(new Node(219,5,true));
        nodes.add(new Node(220,5,true));
        nodes.add(new Node(221,5,true));
        nodes.add(new Node(222,5,true));
        nodes.add(new Node(223,5,true));
        nodes.add(new Node(224,5,true));
        nodes.add(new Node(225,5,true));
        nodes.add(new Node(226,5,true));
        nodes.add(new Node(227,5,true));
        nodes.add(new Node(228,5,true));
        nodes.add(new Node(229,5,true));
        nodes.add(new Node(230,5,true));
        nodes.add(new Node(231,5,true));
        nodes.add(new Node(232,5,true));
        nodes.add(new Node(233,4,true));
        nodes.add(new Node(234,4,true));
        nodes.add(new Node(235,4,true));
        nodes.add(new Node(236,4,false));
        nodes.add(new Node(237,5,true));
        nodes.add(new Node(238,5,true));
        nodes.add(new Node(239,5,true));
        nodes.add(new Node(240,5,true));
        nodes.add(new Node(241,5,true));
        nodes.add(new Node(242,5,true));
        nodes.add(new Node(243,5,true));
        nodes.add(new Node(244,5,true));
        nodes.add(new Node(245,5,true));
        nodes.add(new Node(246,5,true));
        nodes.add(new Node(247,5,true));
        nodes.add(new Node(248,5,true));
        nodes.add(new Node(249,5,true));
        nodes.add(new Node(250,5,true));
        nodes.add(new Node(251,5,true));
        nodes.add(new Node(252,5,true));
        nodes.add(new Node(253,5,true));
        nodes.add(new Node(254,5,true));
        nodes.add(new Node(255,5,true));
        nodes.add(new Node(256,5,true));
        nodes.add(new Node(257,5,true));
        nodes.add(new Node(258,5,true));
        nodes.add(new Node(259,5,true));
        nodes.add(new Node(260,5,true));
        nodes.add(new Node(261,5,true));
        nodes.add(new Node(262,5,true));
        nodes.add(new Node(263,5,true));
        nodes.add(new Node(264,4,true));
        nodes.add(new Node(265,4,true));
        nodes.add(new Node(266,4,true));
        nodes.add(new Node(267,4,true));
        nodes.add(new Node(268,4,true));
        nodes.add(new Node(269,4,false));
        nodes.add(new Node(270,5,true));
        nodes.add(new Node(271,5,true));
        nodes.add(new Node(272,5,true));
        nodes.add(new Node(273,5,true));
        nodes.add(new Node(274,5,true));
        nodes.add(new Node(275,5,true));
        nodes.add(new Node(276,5,true));
        nodes.add(new Node(277,5,true));
        nodes.add(new Node(278,5,true));
        nodes.add(new Node(279,5,true));
        nodes.add(new Node(280,5,true));
        nodes.add(new Node(281,5,true));
        nodes.add(new Node(282,5,true));
        nodes.add(new Node(283,5,true));
        nodes.add(new Node(284,5,true));
        nodes.add(new Node(285,5,true));
        nodes.add(new Node(286,5,true));
        nodes.add(new Node(287,5,true));
        nodes.add(new Node(288,5,true));
        nodes.add(new Node(289,5,true));
        nodes.add(new Node(290,5,true));
        nodes.add(new Node(291,5,true));
        nodes.add(new Node(292,5,true));
        nodes.add(new Node(293,5,true));
        nodes.add(new Node(294,5,true));
        nodes.add(new Node(295,4,true));
        nodes.add(new Node(296,4,true));
        nodes.add(new Node(297,4,true));
        nodes.add(new Node(298,4,true));
        nodes.add(new Node(299,4,true));
        nodes.add(new Node(300,4,true));
        nodes.add(new Node(301,4,true));
        nodes.add(new Node(302,4,true));
        nodes.add(new Node(303,4,true));
        nodes.add(new Node(304,3,true));
        nodes.add(new Node(305,3,false));
        nodes.add(new Node(306,4,true));
        nodes.add(new Node(307,4,true));
        nodes.add(new Node(308,4,true));
        nodes.add(new Node(309,4,true));
        nodes.add(new Node(310,4,true));
        nodes.add(new Node(311,4,true));
        nodes.add(new Node(312,4,true));
        nodes.add(new Node(313,4,true));
        nodes.add(new Node(314,4,true));
        nodes.add(new Node(315,4,false));
        nodes.add(new Node(316,5,true));
        nodes.add(new Node(317,5,true));
        nodes.add(new Node(318,5,true));
        nodes.add(new Node(319,5,true));
        nodes.add(new Node(320,5,true));
        nodes.add(new Node(321,5,true));
        nodes.add(new Node(322,5,true));
        nodes.add(new Node(323,5,true));
        nodes.add(new Node(324,5,true));
        nodes.add(new Node(325,5,true));
        nodes.add(new Node(326,5,true));
        nodes.add(new Node(327,5,true));
        nodes.add(new Node(328,5,true));
        nodes.add(new Node(329,5,true));
        nodes.add(new Node(330,5,true));
        nodes.add(new Node(331,5,true));
        nodes.add(new Node(332,5,true));
        nodes.add(new Node(333,5,true));
        nodes.add(new Node(334,5,true));
        nodes.add(new Node(335,5,true));
        nodes.add(new Node(336,5,true));
        nodes.add(new Node(337,5,true));
        nodes.add(new Node(338,5,true));
        nodes.add(new Node(339,5,true));
        nodes.add(new Node(340,5,true));
        nodes.add(new Node(341,5,true));
        nodes.add(new Node(342,5,true));
        nodes.add(new Node(343,5,true));
        nodes.add(new Node(344,4,true));
        nodes.add(new Node(345,4,true));
        nodes.add(new Node(346,4,true));
        nodes.add(new Node(347,4,true));
        nodes.add(new Node(348,4,true));
        nodes.add(new Node(349,4,true));
        nodes.add(new Node(350,4,true));
        nodes.add(new Node(351,4,true));
        nodes.add(new Node(352,4,true));
        nodes.add(new Node(353,4,true));
        nodes.add(new Node(354,4,true));
        nodes.add(new Node(355,4,true));
        nodes.add(new Node(356,4,true));
        nodes.add(new Node(357,4,true));
        nodes.add(new Node(358,4,true));
        nodes.add(new Node(359,4,true));
        nodes.add(new Node(360,3,true));
        nodes.add(new Node(361,3,false));
        nodes.add(new Node(362,4,true));
        nodes.add(new Node(363,4,true));
        nodes.add(new Node(364,4,true));
        nodes.add(new Node(365,4,true));
        nodes.add(new Node(366,4,true));
        nodes.add(new Node(367,4,true));
        nodes.add(new Node(368,4,true));
        nodes.add(new Node(369,4,false));
        nodes.add(new Node(370,5,true));
        nodes.add(new Node(371,5,true));
        nodes.add(new Node(372,5,true));
        nodes.add(new Node(373,5,true));
        nodes.add(new Node(374,5,true));
        nodes.add(new Node(375,5,true));
        nodes.add(new Node(376,5,true));
        nodes.add(new Node(377,5,true));
        nodes.add(new Node(378,5,true));
        nodes.add(new Node(379,5,true));
        nodes.add(new Node(380,5,true));
        nodes.add(new Node(381,5,true));
        nodes.add(new Node(382,5,true));
        nodes.add(new Node(383,5,true));
        nodes.add(new Node(384,5,true));
        nodes.add(new Node(385,5,true));
        nodes.add(new Node(386,5,true));
        nodes.add(new Node(387,5,true));
        nodes.add(new Node(388,5,true));
        nodes.add(new Node(389,5,true));
        nodes.add(new Node(390,5,true));
        nodes.add(new Node(391,5,true));
        nodes.add(new Node(392,5,true));
        nodes.add(new Node(393,5,true));
        nodes.add(new Node(394,5,true));
        nodes.add(new Node(395,5,true));
        nodes.add(new Node(396,4,true));
        nodes.add(new Node(397,4,true));
        nodes.add(new Node(398,4,false));
        nodes.add(new Node(399,5,true));
        nodes.add(new Node(400,5,true));
        nodes.add(new Node(401,5,true));
        nodes.add(new Node(402,5,true));
        nodes.add(new Node(403,5,true));
        nodes.add(new Node(404,5,true));
        nodes.add(new Node(405,5,true));
        nodes.add(new Node(406,5,true));
        nodes.add(new Node(407,5,true));
        nodes.add(new Node(408,5,true));
        nodes.add(new Node(409,5,true));
        nodes.add(new Node(410,5,true));
        nodes.add(new Node(411,5,true));
        nodes.add(new Node(412,5,true));
        nodes.add(new Node(413,5,true));
        nodes.add(new Node(414,5,true));
        nodes.add(new Node(415,5,true));
        nodes.add(new Node(416,5,true));
        nodes.add(new Node(417,5,true));
        nodes.add(new Node(418,5,true));
        nodes.add(new Node(419,5,true));
        nodes.add(new Node(420,5,true));
        nodes.add(new Node(421,5,true));
        nodes.add(new Node(422,5,true));
        nodes.add(new Node(423,5,true));
        nodes.add(new Node(424,5,true));
        nodes.add(new Node(425,4,false));
        nodes.add(new Node(426,5,true));
        nodes.add(new Node(427,5,true));
        nodes.add(new Node(428,5,true));
        nodes.add(new Node(429,5,true));
        nodes.add(new Node(430,5,true));
        nodes.add(new Node(431,5,true));
        nodes.add(new Node(432,5,true));
        nodes.add(new Node(433,5,true));
        nodes.add(new Node(434,5,true));
        nodes.add(new Node(435,5,true));
        nodes.add(new Node(436,5,true));
        nodes.add(new Node(437,5,true));
        nodes.add(new Node(438,5,true));
        nodes.add(new Node(439,5,true));
        nodes.add(new Node(440,5,true));
        nodes.add(new Node(441,5,true));
        nodes.add(new Node(442,5,true));
        nodes.add(new Node(443,5,true));
        nodes.add(new Node(444,5,true));
        nodes.add(new Node(445,5,true));
        nodes.add(new Node(446,5,true));
        nodes.add(new Node(447,5,true));
        nodes.add(new Node(448,5,true));
        nodes.add(new Node(449,5,true));
        nodes.add(new Node(450,4,true));
        nodes.add(new Node(451,4,true));
        nodes.add(new Node(452,4,true));
        nodes.add(new Node(453,4,true));
        nodes.add(new Node(454,4,true));
        nodes.add(new Node(455,4,true));
        nodes.add(new Node(456,4,true));
        nodes.add(new Node(457,4,true));
        nodes.add(new Node(458,4,true));
        nodes.add(new Node(459,4,true));
        nodes.add(new Node(460,4,true));
        nodes.add(new Node(461,4,true));
        nodes.add(new Node(462,4,true));
        nodes.add(new Node(463,3,true));
        nodes.add(new Node(464,3,true));
        nodes.add(new Node(465,3,true));
        nodes.add(new Node(466,3,true));
        nodes.add(new Node(467,3,true));
        nodes.add(new Node(468,2,false));
        nodes.add(new Node(469,3,true));
        nodes.add(new Node(470,3,true));
        nodes.add(new Node(471,3,true));
        nodes.add(new Node(472,3,true));
        nodes.add(new Node(473,3,true));
        nodes.add(new Node(474,3,true));
        nodes.add(new Node(475,3,true));
        nodes.add(new Node(476,3,true));
        nodes.add(new Node(477,3,true));
        nodes.add(new Node(478,3,true));
        nodes.add(new Node(479,3,true));
        nodes.add(new Node(480,3,true));
        nodes.add(new Node(481,3,true));
        nodes.add(new Node(482,3,true));
        nodes.add(new Node(483,3,true));
        nodes.add(new Node(484,3,true));
        nodes.add(new Node(485,3,true));
        nodes.add(new Node(486,3,true));
        nodes.add(new Node(487,3,false));
        nodes.add(new Node(488,4,true));
        nodes.add(new Node(489,4,true));
        nodes.add(new Node(490,4,true));
        nodes.add(new Node(491,4,true));
        nodes.add(new Node(492,4,false));
        nodes.add(new Node(493,5,true));
        nodes.add(new Node(494,5,true));
        nodes.add(new Node(495,5,true));
        nodes.add(new Node(496,5,true));
        nodes.add(new Node(497,5,true));
        nodes.add(new Node(498,5,true));
        nodes.add(new Node(499,5,true));
        nodes.add(new Node(500,5,true));
        nodes.add(new Node(501,5,true));
        nodes.add(new Node(502,5,true));
        nodes.add(new Node(503,5,true));
        nodes.add(new Node(504,5,true));
        nodes.add(new Node(505,5,true));
        nodes.add(new Node(506,5,true));
        nodes.add(new Node(507,5,true));
        nodes.add(new Node(508,5,true));
        nodes.add(new Node(509,5,true));
        nodes.add(new Node(510,5,true));
        nodes.add(new Node(511,5,true));
        nodes.add(new Node(512,5,true));
        nodes.add(new Node(513,5,true));
        nodes.add(new Node(514,5,true));
        nodes.add(new Node(515,5,true));
        nodes.add(new Node(516,5,true));
        nodes.add(new Node(517,5,true));
        nodes.add(new Node(518,5,true));
        nodes.add(new Node(519,5,true));
        nodes.add(new Node(520,4,true));
        nodes.add(new Node(521,4,true));
        nodes.add(new Node(522,4,true));
        nodes.add(new Node(523,4,true));
        nodes.add(new Node(524,4,true));
        nodes.add(new Node(525,4,true));
        nodes.add(new Node(526,4,false));
        nodes.add(new Node(527,5,true));
        nodes.add(new Node(528,5,true));
        nodes.add(new Node(529,5,true));
        nodes.add(new Node(530,5,true));
        nodes.add(new Node(531,5,true));
        nodes.add(new Node(532,5,true));
        nodes.add(new Node(533,5,true));
        nodes.add(new Node(534,5,true));
        nodes.add(new Node(535,5,true));
        nodes.add(new Node(536,5,true));
        nodes.add(new Node(537,5,true));
        nodes.add(new Node(538,5,true));
        nodes.add(new Node(539,5,true));
        nodes.add(new Node(540,5,true));
        nodes.add(new Node(541,5,true));
        nodes.add(new Node(542,5,true));
        nodes.add(new Node(543,5,true));
        nodes.add(new Node(544,5,true));
        nodes.add(new Node(545,5,true));
        nodes.add(new Node(546,5,true));
        nodes.add(new Node(547,5,true));
        nodes.add(new Node(548,5,true));
        nodes.add(new Node(549,5,true));
        nodes.add(new Node(550,5,true));
        nodes.add(new Node(551,5,true));
        nodes.add(new Node(552,5,true));
        nodes.add(new Node(553,5,true));
        nodes.add(new Node(554,4,true));
        nodes.add(new Node(555,4,true));
        nodes.add(new Node(556,4,true));
        nodes.add(new Node(557,4,true));
        nodes.add(new Node(558,4,true));
        nodes.add(new Node(559,4,true));
        nodes.add(new Node(560,4,true));
        nodes.add(new Node(561,4,true));
        nodes.add(new Node(562,4,true));
        nodes.add(new Node(563,4,true));
        nodes.add(new Node(564,4,true));
        nodes.add(new Node(565,4,true));
        nodes.add(new Node(566,4,true));
        nodes.add(new Node(567,4,true));
        nodes.add(new Node(568,4,true));
        nodes.add(new Node(569,4,true));
        nodes.add(new Node(570,3,true));
        nodes.add(new Node(571,3,true));
        nodes.add(new Node(572,3,false));
        nodes.add(new Node(573,4,true));
        nodes.add(new Node(574,4,true));
        nodes.add(new Node(575,4,true));
        nodes.add(new Node(576,4,true));
        nodes.add(new Node(577,4,true));
        nodes.add(new Node(578,4,true));
        nodes.add(new Node(579,4,true));
        nodes.add(new Node(580,4,true));
        nodes.add(new Node(581,4,true));
        nodes.add(new Node(582,4,true));
        nodes.add(new Node(583,4,true));
        nodes.add(new Node(584,4,true));
        nodes.add(new Node(585,4,true));
        nodes.add(new Node(586,4,true));
        nodes.add(new Node(587,4,true));
        nodes.add(new Node(588,4,true));
        nodes.add(new Node(589,4,true));
        nodes.add(new Node(590,4,true));
        nodes.add(new Node(591,4,true));
        nodes.add(new Node(592,4,true));
        nodes.add(new Node(593,4,true));
        nodes.add(new Node(594,4,true));
        nodes.add(new Node(595,4,true));
        nodes.add(new Node(596,4,true));
        nodes.add(new Node(597,4,true));
        nodes.add(new Node(598,4,true));
        nodes.add(new Node(599,4,true));
        nodes.add(new Node(600,3,true));
        nodes.add(new Node(601,3,true));
        nodes.add(new Node(602,3,true));
        nodes.add(new Node(603,3,true));
        nodes.add(new Node(604,3,true));
        nodes.add(new Node(605,3,true));
        nodes.add(new Node(606,3,true));
        nodes.add(new Node(607,2,false));
        nodes.add(new Node(608,3,true));
        nodes.add(new Node(609,3,true));
        nodes.add(new Node(610,3,true));
        nodes.add(new Node(611,3,true));
        nodes.add(new Node(612,3,true));
        nodes.add(new Node(613,3,true));
        nodes.add(new Node(614,3,true));
        nodes.add(new Node(615,3,true));
        nodes.add(new Node(616,3,true));
        nodes.add(new Node(617,3,true));
        nodes.add(new Node(618,3,true));
        nodes.add(new Node(619,3,true));
        nodes.add(new Node(620,3,true));
        nodes.add(new Node(621,3,true));
        nodes.add(new Node(622,3,true));
        nodes.add(new Node(623,3,true));
        nodes.add(new Node(624,3,true));
        nodes.add(new Node(625,3,false));
        nodes.add(new Node(626,4,true));
        nodes.add(new Node(627,4,true));
        nodes.add(new Node(628,4,true));
        nodes.add(new Node(629,4,true));
        nodes.add(new Node(630,4,true));
        nodes.add(new Node(631,4,false));
        nodes.add(new Node(632,5,true));
        nodes.add(new Node(633,5,true));
        nodes.add(new Node(634,5,true));
        nodes.add(new Node(635,5,true));
        nodes.add(new Node(636,5,true));
        nodes.add(new Node(637,5,true));
        nodes.add(new Node(638,5,true));
        nodes.add(new Node(639,5,true));
        nodes.add(new Node(640,5,true));
        nodes.add(new Node(641,5,true));
        nodes.add(new Node(642,5,true));
        nodes.add(new Node(643,5,true));
        nodes.add(new Node(644,5,true));
        nodes.add(new Node(645,5,true));
        nodes.add(new Node(646,5,true));
        nodes.add(new Node(647,5,true));
        nodes.add(new Node(648,5,true));
        nodes.add(new Node(649,5,true));
        nodes.add(new Node(650,5,true));
        nodes.add(new Node(651,5,true));
        nodes.add(new Node(652,5,true));
        nodes.add(new Node(653,5,true));
        nodes.add(new Node(654,5,true));
        nodes.add(new Node(655,5,true));
        nodes.add(new Node(656,5,true));
        nodes.add(new Node(657,5,true));
        nodes.add(new Node(658,4,true));
        nodes.add(new Node(659,4,true));
        nodes.add(new Node(660,4,true));
        nodes.add(new Node(661,4,true));
        nodes.add(new Node(662,4,true));
        nodes.add(new Node(663,4,true));
        nodes.add(new Node(664,4,true));
        nodes.add(new Node(665,4,true));
        nodes.add(new Node(666,4,true));
        nodes.add(new Node(667,4,true));
        nodes.add(new Node(668,4,true));
        nodes.add(new Node(669,4,true));
        nodes.add(new Node(670,4,true));
        nodes.add(new Node(671,4,true));
        nodes.add(new Node(672,4,true));
        nodes.add(new Node(673,4,true));
        nodes.add(new Node(674,4,true));
        nodes.add(new Node(675,4,true));
        nodes.add(new Node(676,4,true));
        nodes.add(new Node(677,4,true));
        nodes.add(new Node(678,4,true));
        nodes.add(new Node(679,3,true));
        nodes.add(new Node(680,3,true));
        nodes.add(new Node(681,3,true));
        nodes.add(new Node(682,3,true));
        nodes.add(new Node(683,3,true));
        nodes.add(new Node(684,3,true));
        nodes.add(new Node(685,3,true));
        nodes.add(new Node(686,3,true));
        nodes.add(new Node(687,3,true));
        nodes.add(new Node(688,3,true));
        nodes.add(new Node(689,2,true));
        nodes.add(new Node(690,2,true));
        nodes.add(new Node(691,2,true));
        nodes.add(new Node(692,2,true));
        nodes.add(new Node(693,2,true));
        nodes.add(new Node(694,2,true));
        nodes.add(new Node(695,2,true));
        nodes.add(new Node(696,2,true));
        nodes.add(new Node(697,2,true));
        nodes.add(new Node(698,2,true));
        nodes.add(new Node(699,2,true));
        nodes.add(new Node(700,2,true));
        nodes.add(new Node(701,2,true));
        nodes.add(new Node(702,2,true));
        nodes.add(new Node(703,2,true));
        nodes.add(new Node(704,2,true));
        nodes.add(new Node(705,2,true));
        nodes.add(new Node(706,2,true));
        nodes.add(new Node(707,2,true));
        nodes.add(new Node(708,2,true));
        nodes.add(new Node(709,2,true));
        nodes.add(new Node(710,2,true));
        nodes.add(new Node(711,2,true));
        nodes.add(new Node(712,2,true));
        nodes.add(new Node(713,1,true));
        nodes.add(new Node(714,1,true));
        nodes.add(new Node(715,1,true));
        nodes.add(new Node(716,1,true));
        nodes.add(new Node(717,1,true));
        nodes.add(new Node(718,1,true));
        nodes.add(new Node(719,1,true));
        nodes.add(new Node(720,1,true));
        nodes.add(new Node(721,1,true));
        nodes.add(new Node(722,1,true));
        nodes.add(new Node(723,1,true));
        nodes.add(new Node(724,1,true));
        nodes.add(new Node(725,1,true));
        nodes.add(new Node(726,1,true));
        nodes.add(new Node(727,1,true));
        nodes.add(new Node(728,1,true));
        nodes.add(new Node(729,1,true));
        nodes.add(new Node(730,1,false));
        nodes.add(new Node(731,2,true));
        nodes.add(new Node(732,2,true));
        nodes.add(new Node(733,2,true));
        nodes.add(new Node(734,2,true));
        nodes.add(new Node(735,2,true));
        nodes.add(new Node(736,2,true));
        nodes.add(new Node(737,2,true));
        nodes.add(new Node(738,2,true));
        nodes.add(new Node(739,2,true));
        nodes.add(new Node(740,2,true));
        nodes.add(new Node(741,2,false));
        nodes.add(new Node(742,3,true));
        nodes.add(new Node(743,3,true));
        nodes.add(new Node(744,3,true));
        nodes.add(new Node(745,3,false));
        nodes.add(new Node(746,4,true));
        nodes.add(new Node(747,4,true));
        nodes.add(new Node(748,4,true));
        nodes.add(new Node(749,4,true));
        nodes.add(new Node(750,4,true));
        nodes.add(new Node(751,4,false));
        nodes.add(new Node(752,5,true));
        nodes.add(new Node(753,5,true));
        nodes.add(new Node(754,5,true));
        nodes.add(new Node(755,5,true));
        nodes.add(new Node(756,5,true));
        nodes.add(new Node(757,5,true));
        nodes.add(new Node(758,5,true));
        nodes.add(new Node(759,5,true));
        nodes.add(new Node(760,5,true));
        nodes.add(new Node(761,5,true));
        nodes.add(new Node(762,5,true));
        nodes.add(new Node(763,5,true));
        nodes.add(new Node(764,5,true));
        nodes.add(new Node(765,5,true));
        nodes.add(new Node(766,5,true));
        nodes.add(new Node(767,5,true));
        nodes.add(new Node(768,5,true));
        nodes.add(new Node(769,5,true));
        nodes.add(new Node(770,5,true));
        nodes.add(new Node(771,5,true));
        nodes.add(new Node(772,5,true));
        nodes.add(new Node(773,5,true));
        nodes.add(new Node(774,5,true));
        nodes.add(new Node(775,5,true));
        nodes.add(new Node(776,5,true));
        nodes.add(new Node(777,5,true));
        nodes.add(new Node(778,5,true));
        nodes.add(new Node(779,4,true));
        nodes.add(new Node(780,4,true));
        nodes.add(new Node(781,4,true));
        nodes.add(new Node(782,4,false));
        nodes.add(new Node(783,5,true));
        nodes.add(new Node(784,5,true));
        nodes.add(new Node(785,5,true));
        nodes.add(new Node(786,5,true));
        nodes.add(new Node(787,5,true));
        nodes.add(new Node(788,5,true));
        nodes.add(new Node(789,5,true));
        nodes.add(new Node(790,5,true));
        nodes.add(new Node(791,5,true));
        nodes.add(new Node(792,5,true));
        nodes.add(new Node(793,5,true));
        nodes.add(new Node(794,5,true));
        nodes.add(new Node(795,5,true));
        nodes.add(new Node(796,5,true));
        nodes.add(new Node(797,5,true));
        nodes.add(new Node(798,5,true));
        nodes.add(new Node(799,5,true));
        nodes.add(new Node(800,5,true));
        nodes.add(new Node(801,5,true));
        nodes.add(new Node(802,5,true));
        nodes.add(new Node(803,5,true));
        nodes.add(new Node(804,5,true));
        nodes.add(new Node(805,5,true));
        nodes.add(new Node(806,5,true));
        nodes.add(new Node(807,5,true));
        nodes.add(new Node(808,5,true));
        nodes.add(new Node(809,4,true));
        nodes.add(new Node(810,4,true));
        nodes.add(new Node(811,4,true));
        nodes.add(new Node(812,4,true));
        nodes.add(new Node(813,4,true));
        nodes.add(new Node(814,4,true));
        nodes.add(new Node(815,4,true));
        nodes.add(new Node(816,4,true));
        nodes.add(new Node(817,4,true));
        nodes.add(new Node(818,4,true));
        nodes.add(new Node(819,4,false));
        nodes.add(new Node(820,5,true));
        nodes.add(new Node(821,5,true));
        nodes.add(new Node(822,5,true));
        nodes.add(new Node(823,5,true));
        nodes.add(new Node(824,5,true));
        nodes.add(new Node(825,5,true));
        nodes.add(new Node(826,5,true));
        nodes.add(new Node(827,5,true));
        nodes.add(new Node(828,5,true));
        nodes.add(new Node(829,5,true));
        nodes.add(new Node(830,5,true));
        nodes.add(new Node(831,5,true));
        nodes.add(new Node(832,5,true));
        nodes.add(new Node(833,5,true));
        nodes.add(new Node(834,5,true));
        nodes.add(new Node(835,5,true));
        nodes.add(new Node(836,5,true));
        nodes.add(new Node(837,5,true));
        nodes.add(new Node(838,5,true));
        nodes.add(new Node(839,5,true));
        nodes.add(new Node(840,5,true));
        nodes.add(new Node(841,5,true));
        nodes.add(new Node(842,5,true));
        nodes.add(new Node(843,5,true));
        nodes.add(new Node(844,5,true));
        nodes.add(new Node(845,5,true));
        nodes.add(new Node(846,4,true));
        nodes.add(new Node(847,4,true));
        nodes.add(new Node(848,4,true));
        nodes.add(new Node(849,4,true));
        nodes.add(new Node(850,4,true));
        nodes.add(new Node(851,3,true));
        nodes.add(new Node(852,3,false));
        nodes.add(new Node(853,4,true));
        nodes.add(new Node(854,4,true));
        nodes.add(new Node(855,4,true));
        nodes.add(new Node(856,4,true));
        nodes.add(new Node(857,4,true));
        nodes.add(new Node(858,4,true));
        nodes.add(new Node(859,4,true));
        nodes.add(new Node(860,4,true));
        nodes.add(new Node(861,4,true));
        nodes.add(new Node(862,4,true));
        nodes.add(new Node(863,4,true));
        nodes.add(new Node(864,4,false));
        nodes.add(new Node(865,5,true));
        nodes.add(new Node(866,5,true));
        nodes.add(new Node(867,5,true));
        nodes.add(new Node(868,5,true));
        nodes.add(new Node(869,5,true));
        nodes.add(new Node(870,5,true));
        nodes.add(new Node(871,5,true));
        nodes.add(new Node(872,5,true));
        nodes.add(new Node(873,5,true));
        nodes.add(new Node(874,5,true));
        nodes.add(new Node(875,5,true));
        nodes.add(new Node(876,5,true));
        nodes.add(new Node(877,5,true));
        nodes.add(new Node(878,5,true));
        nodes.add(new Node(879,5,true));
        nodes.add(new Node(880,5,true));
        nodes.add(new Node(881,5,true));
        nodes.add(new Node(882,5,true));
        nodes.add(new Node(883,5,true));
        nodes.add(new Node(884,5,true));
        nodes.add(new Node(885,5,true));
        nodes.add(new Node(886,5,true));
        nodes.add(new Node(887,5,true));
        nodes.add(new Node(888,5,true));
        nodes.add(new Node(889,5,true));
        nodes.add(new Node(890,5,true));
        nodes.add(new Node(891,5,true));
        nodes.add(new Node(892,4,true));
        nodes.add(new Node(893,4,true));
        nodes.add(new Node(894,4,true));
        nodes.add(new Node(895,4,true));
        nodes.add(new Node(896,4,true));
        nodes.add(new Node(897,4,true));
        nodes.add(new Node(898,4,true));
        nodes.add(new Node(899,4,true));
        nodes.add(new Node(900,4,true));
        nodes.add(new Node(901,4,true));
        nodes.add(new Node(902,4,true));
        nodes.add(new Node(903,4,true));
        nodes.add(new Node(904,4,true));
        nodes.add(new Node(905,4,true));
        nodes.add(new Node(906,4,true));
        nodes.add(new Node(907,4,true));
        nodes.add(new Node(908,3,false));
        nodes.add(new Node(909,4,true));
        nodes.add(new Node(910,4,true));
        nodes.add(new Node(911,4,true));
        nodes.add(new Node(912,4,true));
        nodes.add(new Node(913,4,true));
        nodes.add(new Node(914,4,true));
        nodes.add(new Node(915,4,false));
        nodes.add(new Node(916,5,true));
        nodes.add(new Node(917,5,true));
        nodes.add(new Node(918,5,true));
        nodes.add(new Node(919,5,true));
        nodes.add(new Node(920,5,true));
        nodes.add(new Node(921,5,true));
        nodes.add(new Node(922,5,true));
        nodes.add(new Node(923,5,true));
        nodes.add(new Node(924,5,true));
        nodes.add(new Node(925,5,true));
        nodes.add(new Node(926,5,true));
        nodes.add(new Node(927,5,true));
        nodes.add(new Node(928,5,true));
        nodes.add(new Node(929,5,true));
        nodes.add(new Node(930,5,true));
        nodes.add(new Node(931,5,true));
        nodes.add(new Node(932,5,true));
        nodes.add(new Node(933,5,true));
        nodes.add(new Node(934,5,true));
        nodes.add(new Node(935,5,true));
        nodes.add(new Node(936,5,true));
        nodes.add(new Node(937,5,true));
        nodes.add(new Node(938,5,true));
        nodes.add(new Node(939,5,true));
        nodes.add(new Node(940,5,true));
        nodes.add(new Node(941,5,true));
        nodes.add(new Node(942,5,true));
        nodes.add(new Node(943,4,true));
        nodes.add(new Node(944,4,true));
        nodes.add(new Node(945,4,true));
        nodes.add(new Node(946,4,false));
        nodes.add(new Node(947,5,true));
        nodes.add(new Node(948,5,true));
        nodes.add(new Node(949,5,true));
        nodes.add(new Node(950,5,true));
        nodes.add(new Node(951,5,true));
        nodes.add(new Node(952,5,true));
        nodes.add(new Node(953,5,true));
        nodes.add(new Node(954,5,true));
        nodes.add(new Node(955,5,true));
        nodes.add(new Node(956,5,true));
        nodes.add(new Node(957,5,true));
        nodes.add(new Node(958,5,true));
        nodes.add(new Node(959,5,true));
        nodes.add(new Node(960,5,true));
        nodes.add(new Node(961,5,true));
        nodes.add(new Node(962,5,true));
        nodes.add(new Node(963,5,true));
        nodes.add(new Node(964,5,true));
        nodes.add(new Node(965,5,true));
        nodes.add(new Node(966,5,true));
        nodes.add(new Node(967,5,true));
        nodes.add(new Node(968,5,true));
        nodes.add(new Node(969,5,true));
        nodes.add(new Node(970,5,true));
        nodes.add(new Node(971,5,true));
        nodes.add(new Node(972,4,true));
        nodes.add(new Node(973,4,true));
        nodes.add(new Node(974,4,true));
        nodes.add(new Node(975,4,true));
        nodes.add(new Node(976,4,true));
        nodes.add(new Node(977,4,true));
        nodes.add(new Node(978,4,true));
        nodes.add(new Node(979,4,true));
        nodes.add(new Node(980,4,true));
        nodes.add(new Node(981,4,true));
        nodes.add(new Node(982,4,true));
        nodes.add(new Node(983,4,true));
        nodes.add(new Node(984,4,true));
        nodes.add(new Node(985,4,true));
        nodes.add(new Node(986,4,true));
        nodes.add(new Node(987,4,true));
        nodes.add(new Node(988,3,true));
        nodes.add(new Node(989,3,true));
        nodes.add(new Node(990,3,true));
        nodes.add(new Node(991,3,true));
        nodes.add(new Node(992,3,false));
        nodes.add(new Node(993,4,true));
        nodes.add(new Node(994,4,true));
        nodes.add(new Node(995,4,true));
        nodes.add(new Node(996,4,true));
        nodes.add(new Node(997,4,true));
        nodes.add(new Node(998,4,true));
        nodes.add(new Node(999,4,false));
        nodes.add(new Node(1000,5,true));
        nodes.add(new Node(1001,5,true));
        nodes.add(new Node(1002,5,true));
        nodes.add(new Node(1003,5,true));
        nodes.add(new Node(1004,5,true));
        nodes.add(new Node(1005,5,true));
        nodes.add(new Node(1006,5,true));
        nodes.add(new Node(1007,5,true));
        nodes.add(new Node(1008,5,true));
        nodes.add(new Node(1009,5,true));
        nodes.add(new Node(1010,5,true));
        nodes.add(new Node(1011,5,true));
        nodes.add(new Node(1012,5,true));
        nodes.add(new Node(1013,5,true));
        nodes.add(new Node(1014,5,true));
        nodes.add(new Node(1015,5,true));
        nodes.add(new Node(1016,5,true));
        nodes.add(new Node(1017,5,true));
        nodes.add(new Node(1018,5,true));
        nodes.add(new Node(1019,5,true));
        nodes.add(new Node(1020,5,true));
        nodes.add(new Node(1021,5,true));
        nodes.add(new Node(1022,5,true));
        nodes.add(new Node(1023,5,true));
        nodes.add(new Node(1024,5,true));
        nodes.add(new Node(1025,5,true));
        nodes.add(new Node(1026,4,true));
        nodes.add(new Node(1027,4,true));
        nodes.add(new Node(1028,4,false));
        nodes.add(new Node(1029,5,true));
        nodes.add(new Node(1030,5,true));
        nodes.add(new Node(1031,5,true));
        nodes.add(new Node(1032,5,true));
        nodes.add(new Node(1033,5,true));
        nodes.add(new Node(1034,5,true));
        nodes.add(new Node(1035,5,true));
        nodes.add(new Node(1036,5,true));
        nodes.add(new Node(1037,5,true));
        nodes.add(new Node(1038,5,true));
        nodes.add(new Node(1039,5,true));
        nodes.add(new Node(1040,5,true));
        nodes.add(new Node(1041,5,true));
        nodes.add(new Node(1042,5,true));
        nodes.add(new Node(1043,5,true));
        nodes.add(new Node(1044,5,true));
        nodes.add(new Node(1045,5,true));
        nodes.add(new Node(1046,5,true));
        nodes.add(new Node(1047,5,true));
        nodes.add(new Node(1048,5,true));
        nodes.add(new Node(1049,5,true));
        nodes.add(new Node(1050,5,true));
        nodes.add(new Node(1051,5,true));
        nodes.add(new Node(1052,5,true));
        nodes.add(new Node(1053,4,true));
        nodes.add(new Node(1054,4,true));
        nodes.add(new Node(1055,4,true));
        nodes.add(new Node(1056,4,true));
        nodes.add(new Node(1057,4,true));
        nodes.add(new Node(1058,4,false));
        nodes.add(new Node(1059,5,true));
        nodes.add(new Node(1060,5,true));
        nodes.add(new Node(1061,5,true));
        nodes.add(new Node(1062,5,true));
        nodes.add(new Node(1063,5,true));
        nodes.add(new Node(1064,5,true));
        nodes.add(new Node(1065,5,true));
        nodes.add(new Node(1066,5,true));
        nodes.add(new Node(1067,5,true));
        nodes.add(new Node(1068,5,true));
        nodes.add(new Node(1069,5,true));
        nodes.add(new Node(1070,5,true));
        nodes.add(new Node(1071,5,true));
        nodes.add(new Node(1072,5,true));
        nodes.add(new Node(1073,5,true));
        nodes.add(new Node(1074,5,true));
        nodes.add(new Node(1075,5,true));
        nodes.add(new Node(1076,5,true));
        nodes.add(new Node(1077,5,true));
        nodes.add(new Node(1078,5,true));
        nodes.add(new Node(1079,5,true));
        nodes.add(new Node(1080,5,true));
        nodes.add(new Node(1081,5,true));
        nodes.add(new Node(1082,5,true));
        nodes.add(new Node(1083,5,true));
        nodes.add(new Node(1084,5,true));
        nodes.add(new Node(1085,4,true));
        nodes.add(new Node(1086,4,true));
        nodes.add(new Node(1087,4,true));
        nodes.add(new Node(1088,4,true));
        nodes.add(new Node(1089,4,false));
        nodes.add(new Node(1090,5,true));
        nodes.add(new Node(1091,5,true));
        nodes.add(new Node(1092,5,true));
        nodes.add(new Node(1093,5,true));
        nodes.add(new Node(1094,5,true));
        nodes.add(new Node(1095,5,true));
        nodes.add(new Node(1096,5,true));
        nodes.add(new Node(1097,5,true));
        nodes.add(new Node(1098,5,true));
        nodes.add(new Node(1099,5,true));
        nodes.add(new Node(1100,5,true));
        nodes.add(new Node(1101,5,true));
        nodes.add(new Node(1102,5,true));
        nodes.add(new Node(1103,5,true));
        nodes.add(new Node(1104,5,true));
        nodes.add(new Node(1105,5,true));
        nodes.add(new Node(1106,5,true));
        nodes.add(new Node(1107,5,true));
        nodes.add(new Node(1108,5,true));
        nodes.add(new Node(1109,5,true));
        nodes.add(new Node(1110,5,true));
        nodes.add(new Node(1111,5,true));
        nodes.add(new Node(1112,5,true));
        nodes.add(new Node(1113,5,true));
        nodes.add(new Node(1114,4,true));
        nodes.add(new Node(1115,4,true));
        nodes.add(new Node(1116,4,true));
        nodes.add(new Node(1117,4,true));
        nodes.add(new Node(1118,4,true));
        nodes.add(new Node(1119,3,true));
        nodes.add(new Node(1120,3,false));
        nodes.add(new Node(1121,4,true));
        nodes.add(new Node(1122,4,true));
        nodes.add(new Node(1123,4,true));
        nodes.add(new Node(1124,4,true));
        nodes.add(new Node(1125,4,true));
        nodes.add(new Node(1126,4,true));
        nodes.add(new Node(1127,4,true));
        nodes.add(new Node(1128,4,true));
        nodes.add(new Node(1129,4,true));
        nodes.add(new Node(1130,4,true));
        nodes.add(new Node(1131,4,true));
        nodes.add(new Node(1132,4,true));
        nodes.add(new Node(1133,4,true));
        nodes.add(new Node(1134,4,true));
        nodes.add(new Node(1135,4,true));
        nodes.add(new Node(1136,4,true));
        nodes.add(new Node(1137,4,true));
        nodes.add(new Node(1138,4,true));
        nodes.add(new Node(1139,4,true));
        nodes.add(new Node(1140,4,false));
        nodes.add(new Node(1141,5,true));
        nodes.add(new Node(1142,5,true));
        nodes.add(new Node(1143,5,true));
        nodes.add(new Node(1144,5,true));
        nodes.add(new Node(1145,5,true));
        nodes.add(new Node(1146,5,true));
        nodes.add(new Node(1147,5,true));
        nodes.add(new Node(1148,5,true));
        nodes.add(new Node(1149,5,true));
        nodes.add(new Node(1150,5,true));
        nodes.add(new Node(1151,5,true));
        nodes.add(new Node(1152,5,true));
        nodes.add(new Node(1153,5,true));
        nodes.add(new Node(1154,5,true));
        nodes.add(new Node(1155,5,true));
        nodes.add(new Node(1156,5,true));
        nodes.add(new Node(1157,5,true));
        nodes.add(new Node(1158,5,true));
        nodes.add(new Node(1159,5,true));
        nodes.add(new Node(1160,5,true));
        nodes.add(new Node(1161,5,true));
        nodes.add(new Node(1162,5,true));
        nodes.add(new Node(1163,5,true));
        nodes.add(new Node(1164,5,true));
        nodes.add(new Node(1165,4,true));
        nodes.add(new Node(1166,4,true));
        nodes.add(new Node(1167,4,true));
        nodes.add(new Node(1168,4,true));
        nodes.add(new Node(1169,4,true));
        nodes.add(new Node(1170,3,true));
        nodes.add(new Node(1171,3,true));
        nodes.add(new Node(1172,3,true));
        nodes.add(new Node(1173,3,true));
        nodes.add(new Node(1174,3,true));
        nodes.add(new Node(1175,3,true));
        nodes.add(new Node(1176,3,true));
        nodes.add(new Node(1177,3,true));
        nodes.add(new Node(1178,3,true));
        nodes.add(new Node(1179,3,true));
        nodes.add(new Node(1180,3,false));
        nodes.add(new Node(1181,4,true));
        nodes.add(new Node(1182,4,true));
        nodes.add(new Node(1183,4,true));
        nodes.add(new Node(1184,4,true));
        nodes.add(new Node(1185,4,true));
        nodes.add(new Node(1186,4,true));
        nodes.add(new Node(1187,4,true));
        nodes.add(new Node(1188,4,true));
        nodes.add(new Node(1189,4,false));
        nodes.add(new Node(1190,5,true));
        nodes.add(new Node(1191,5,true));
        nodes.add(new Node(1192,5,true));
        nodes.add(new Node(1193,5,true));
        nodes.add(new Node(1194,5,true));
        nodes.add(new Node(1195,5,true));
        nodes.add(new Node(1196,5,true));
        nodes.add(new Node(1197,5,true));
        nodes.add(new Node(1198,5,true));
        nodes.add(new Node(1199,5,true));
        nodes.add(new Node(1200,5,true));
        nodes.add(new Node(1201,5,true));
        nodes.add(new Node(1202,5,true));
        nodes.add(new Node(1203,5,true));
        nodes.add(new Node(1204,5,true));
        nodes.add(new Node(1205,5,true));
        nodes.add(new Node(1206,5,true));
        nodes.add(new Node(1207,5,true));
        nodes.add(new Node(1208,5,true));
        nodes.add(new Node(1209,5,true));
        nodes.add(new Node(1210,5,true));
        nodes.add(new Node(1211,5,true));
        nodes.add(new Node(1212,5,true));
        nodes.add(new Node(1213,5,true));
        nodes.add(new Node(1214,5,true));
        nodes.add(new Node(1215,4,true));
        nodes.add(new Node(1216,4,true));
        nodes.add(new Node(1217,4,true));
        nodes.add(new Node(1218,4,true));
        nodes.add(new Node(1219,4,true));
        nodes.add(new Node(1220,4,true));
        nodes.add(new Node(1221,4,true));
        nodes.add(new Node(1222,4,true));
        nodes.add(new Node(1223,4,true));
        nodes.add(new Node(1224,4,true));
        nodes.add(new Node(1225,4,true));
        nodes.add(new Node(1226,4,true));
        nodes.add(new Node(1227,4,true));
        nodes.add(new Node(1228,4,true));
        nodes.add(new Node(1229,4,true));
        nodes.add(new Node(1230,3,true));
        nodes.add(new Node(1231,3,true));
        nodes.add(new Node(1232,3,true));
        nodes.add(new Node(1233,3,true));
        nodes.add(new Node(1234,3,true));
        nodes.add(new Node(1235,2,true));
        nodes.add(new Node(1236,2,true));
        nodes.add(new Node(1237,2,false));
        nodes.add(new Node(1238,3,true));
        nodes.add(new Node(1239,3,true));
        nodes.add(new Node(1240,3,true));
        nodes.add(new Node(1241,3,true));
        nodes.add(new Node(1242,3,true));
        nodes.add(new Node(1243,3,true));
        nodes.add(new Node(1244,3,false));
        nodes.add(new Node(1245,4,true));
        nodes.add(new Node(1246,4,true));
        nodes.add(new Node(1247,4,true));
        nodes.add(new Node(1248,4,true));
        nodes.add(new Node(1249,4,true));
        nodes.add(new Node(1250,4,true));
        nodes.add(new Node(1251,4,true));
        nodes.add(new Node(1252,4,true));
        nodes.add(new Node(1253,4,true));
        nodes.add(new Node(1254,4,false));
        nodes.add(new Node(1255,5,true));
        nodes.add(new Node(1256,5,true));
        nodes.add(new Node(1257,5,true));
        nodes.add(new Node(1258,5,true));
        nodes.add(new Node(1259,5,true));
        nodes.add(new Node(1260,5,true));
        nodes.add(new Node(1261,5,true));
        nodes.add(new Node(1262,5,true));
        nodes.add(new Node(1263,5,true));
        nodes.add(new Node(1264,5,true));
        nodes.add(new Node(1265,5,true));
        nodes.add(new Node(1266,5,true));
        nodes.add(new Node(1267,5,true));
        nodes.add(new Node(1268,5,true));
        nodes.add(new Node(1269,5,true));
        nodes.add(new Node(1270,5,true));
        nodes.add(new Node(1271,5,true));
        nodes.add(new Node(1272,5,true));
        nodes.add(new Node(1273,5,true));
        nodes.add(new Node(1274,5,true));
        nodes.add(new Node(1275,5,true));
        nodes.add(new Node(1276,5,true));
        nodes.add(new Node(1277,5,true));
        nodes.add(new Node(1278,5,true));
        nodes.add(new Node(1279,5,true));
        nodes.add(new Node(1280,5,true));
        nodes.add(new Node(1281,4,true));
        nodes.add(new Node(1282,4,true));
        nodes.add(new Node(1283,4,true));
        nodes.add(new Node(1284,4,true));
        nodes.add(new Node(1285,4,true));
        nodes.add(new Node(1286,4,true));
        nodes.add(new Node(1287,4,true));
        nodes.add(new Node(1288,4,true));
        nodes.add(new Node(1289,4,true));
        nodes.add(new Node(1290,4,true));
        nodes.add(new Node(1291,4,true));
        nodes.add(new Node(1292,4,true));
        nodes.add(new Node(1293,4,true));
        nodes.add(new Node(1294,4,true));
        nodes.add(new Node(1295,4,true));
        nodes.add(new Node(1296,4,true));
        nodes.add(new Node(1297,4,true));
        nodes.add(new Node(1298,3,true));
        nodes.add(new Node(1299,3,true));
        nodes.add(new Node(1300,3,true));
        nodes.add(new Node(1301,3,true));
        nodes.add(new Node(1302,3,false));
        nodes.add(new Node(1303,4,true));
        nodes.add(new Node(1304,4,true));
        nodes.add(new Node(1305,4,true));
        nodes.add(new Node(1306,4,true));
        nodes.add(new Node(1307,4,true));
        nodes.add(new Node(1308,4,true));
        nodes.add(new Node(1309,4,true));
        nodes.add(new Node(1310,4,true));
        nodes.add(new Node(1311,4,false));
        nodes.add(new Node(1312,5,true));
        nodes.add(new Node(1313,5,true));
        nodes.add(new Node(1314,5,true));
        nodes.add(new Node(1315,5,true));
        nodes.add(new Node(1316,5,true));
        nodes.add(new Node(1317,5,true));
        nodes.add(new Node(1318,5,true));
        nodes.add(new Node(1319,5,true));
        nodes.add(new Node(1320,5,true));
        nodes.add(new Node(1321,5,true));
        nodes.add(new Node(1322,5,true));
        nodes.add(new Node(1323,5,true));
        nodes.add(new Node(1324,5,true));
        nodes.add(new Node(1325,5,true));
        nodes.add(new Node(1326,5,true));
        nodes.add(new Node(1327,5,true));
        nodes.add(new Node(1328,5,true));
        nodes.add(new Node(1329,5,true));
        nodes.add(new Node(1330,5,true));
        nodes.add(new Node(1331,5,true));
        nodes.add(new Node(1332,5,true));
        nodes.add(new Node(1333,5,true));
        nodes.add(new Node(1334,5,true));
        nodes.add(new Node(1335,5,true));
        nodes.add(new Node(1336,5,true));
        nodes.add(new Node(1337,5,true));
        nodes.add(new Node(1338,4,true));
        nodes.add(new Node(1339,4,true));
        nodes.add(new Node(1340,4,true));
        nodes.add(new Node(1341,4,true));
        nodes.add(new Node(1342,4,true));
        nodes.add(new Node(1343,4,true));
        nodes.add(new Node(1344,4,true));
        nodes.add(new Node(1345,4,true));
        nodes.add(new Node(1346,4,true));
        nodes.add(new Node(1347,4,true));
        nodes.add(new Node(1348,4,false));
        nodes.add(new Node(1349,5,true));
        nodes.add(new Node(1350,5,true));
        nodes.add(new Node(1351,5,true));
        nodes.add(new Node(1352,5,true));
        nodes.add(new Node(1353,5,true));
        nodes.add(new Node(1354,5,true));
        nodes.add(new Node(1355,5,true));
        nodes.add(new Node(1356,5,true));
        nodes.add(new Node(1357,5,true));
        nodes.add(new Node(1358,5,true));
        nodes.add(new Node(1359,5,true));
        nodes.add(new Node(1360,5,true));
        nodes.add(new Node(1361,5,true));
        nodes.add(new Node(1362,5,true));
        nodes.add(new Node(1363,5,true));
        nodes.add(new Node(1364,5,true));
        nodes.add(new Node(1365,5,true));
        nodes.add(new Node(1366,5,true));
        nodes.add(new Node(1367,5,true));
        nodes.add(new Node(1368,5,true));
        nodes.add(new Node(1369,5,true));
        nodes.add(new Node(1370,5,true));
        nodes.add(new Node(1371,5,true));
        nodes.add(new Node(1372,5,true));
        nodes.add(new Node(1373,5,true));
        nodes.add(new Node(1374,4,true));
        nodes.add(new Node(1375,4,true));
        nodes.add(new Node(1376,4,true));
        nodes.add(new Node(1377,4,true));
        nodes.add(new Node(1378,4,true));
        nodes.add(new Node(1379,4,true));
        nodes.add(new Node(1380,4,true));
        nodes.add(new Node(1381,3,true));
        nodes.add(new Node(1382,3,true));
        nodes.add(new Node(1383,3,true));
        nodes.add(new Node(1384,3,true));
        nodes.add(new Node(1385,3,true));
        nodes.add(new Node(1386,3,true));
        nodes.add(new Node(1387,3,true));
        nodes.add(new Node(1388,3,true));
        nodes.add(new Node(1389,3,true));
        nodes.add(new Node(1390,3,true));
        nodes.add(new Node(1391,3,true));
        nodes.add(new Node(1392,3,true));
        nodes.add(new Node(1393,3,true));
        nodes.add(new Node(1394,3,true));
        nodes.add(new Node(1395,3,true));
        nodes.add(new Node(1396,3,true));
        nodes.add(new Node(1397,3,true));
        nodes.add(new Node(1398,2,true));
        nodes.add(new Node(1399,2,true));
        nodes.add(new Node(1400,2,true));
        nodes.add(new Node(1401,2,true));
        nodes.add(new Node(1402,2,true));
        nodes.add(new Node(1403,2,true));
        nodes.add(new Node(1404,2,true));
        nodes.add(new Node(1405,2,true));
        nodes.add(new Node(1406,2,true));
        nodes.add(new Node(1407,2,true));
        nodes.add(new Node(1408,2,true));
        nodes.add(new Node(1409,2,true));
        nodes.add(new Node(1410,2,true));
        nodes.add(new Node(1411,2,true));
        nodes.add(new Node(1412,2,true));
        nodes.add(new Node(1413,2,true));
        nodes.add(new Node(1414,1,true));
        nodes.add(new Node(1415,1,true));
        nodes.add(new Node(1416,1,true));
        nodes.add(new Node(1417,1,true));
        nodes.add(new Node(1418,1,true));
        nodes.add(new Node(1419,1,true));
        nodes.add(new Node(1420,1,true));
        nodes.add(new Node(1421,1,true));
        nodes.add(new Node(1422,1,true));
        nodes.add(new Node(1423,1,true));

        System.out.println("nodes size = " + nodes.size());
    }

}
